version: 2.1

orbs:
  python: circleci/python@2.1.1
  sonarcloud: sonarsource/sonarcloud@1.0.3

jobs:
  build-aoc-tests:
    parallelism: 4
    resource_class: small
    executor:
      name: python/default
      tag: "3.10"
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run AOC tests
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "aoc/year_201*/day_*.py" | circleci tests split --split-by=timings)
            mkdir -p test-results
            poetry run coverage run -m pytest --log-cli-level=INFO --junitxml=test-results/junit-$CIRCLE_NODE_INDEX.xml $TEST_FILES
            cp .coverage test-results/.coverage.$CIRCLE_NODE_INDEX
      - persist_to_workspace:
          root: test-results
          paths:
            - "*"
  aggregate-sonar:
    resource_class: small
    executor:
      name: python/default
      tag: "3.10"
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - attach_workspace:
          at: test-results
      - run:
          name: Build Coverage Report
          command: |
            set -e
            mkdir -p coverage-reports
            poetry run coverage combine test-results/.coverage.0 test-results/.coverage.1 test-results/.coverage.2 test-results/.coverage.3
            poetry run coverage report
            poetry run coverage xml -o coverage-reports/coverage.xml
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: coverage-reports
      - sonarcloud/scan

workflows:
  main:
    jobs:
      - build-aoc-tests
      - aggregate-sonar:
          context: SonarCloud
          requires:
            - build-aoc-tests
